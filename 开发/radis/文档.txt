官方下载地址：http://download.redis.io/releases/
安装
cd redis-3.2.11
make 编译
make PREFIX=/usr/local/redis install 指定目录安装

启动
./redis-server
停止
./redis-cli shutdown
配置守护进程使后台启动：将redis.conf拷贝到bin下，修改文件中daemonize为yes
启动时执行：./redis-server redis.conf

修改配置文件：
端口修改：port 6379
哪些机器可连接：bind 127.0.0.1 改为：bind 0.0.0.0任何都可连
指定超时时间：timeout 0默认无超时时间
启动时指定端口：./redis-server redis.conf --port 6380（可以同时启动多个redis在不同端口上）

客户端命令：
连接指定IP或端口，默认6379：./redis-cli -h 192.168.0.201 -p 6380
退出：exit
配置授权密码：修改配置文件requirepass（默认无需授权）
连接后需执行：AUTH 密码
或启动时执行：./redis-cli -a 密码 shutdown（也可以直接执行对应命令）

增删改查相关命令：
清空 FLUSHALL
先连接客户端
获取所有：keys
增：set key1 val1
查：get key1
改：set key1 value1
删：del key1
增多条：mset key1 value1 key2 value2 key3 value3
查多条：mget key1 key2 key3
新增但如果存在则不作任何操作：setnx key1 aaaa
先获取后替换：getset key1 aaa
设置过期时间：setex key4 10 value4（单位秒）
替换值中的某个字符：setrange key1 0 abcd（0为开始索引，用abcd去替换对应部分，最后字符长度不变）
数字类型自增：incr key1(先自增并返回结果) 同理自减：decr
数字类型加多少并返回结果：incrby key1 100 同理减法：decrby
字符串后面增加：append key1 abc（返回长度）
只返回字符串长度：strlen key1

#HASH类型：
hset p1 name zhangsan
hset p2 name lise
hget p1 name
删除属性：hdel p1 lise
批量设置：
hmset p1 age 20 addr abc
hmget p1 name addr
判断属性是否存在：HEXISTS p1 name
获取属性个数：HLEN p1
列出所有属性名称：HKEYS p1
列出所有属性的值：HVALS p1
列出属性名和属性值：HGETALL p1

#LIST类型：
放数据：
lpush k 1 2 3 4 5 6 7 8 9 0（从头部加入元素。栈，先进后出）
rpush k 1 2 3 4 5 6 7 8 9 0（从尾部加入元素。队列，先进先出）
查看数据:
lrange k 0 -1（lrange key start stop，从左到右-1代表所有）
插入数据：linsert k before 9 1（表示在9前面插入1，返回列表长度。用after在后面插入）
设置（修改）数据：lset k 0 abcd（0是索引 abcd是替换值）
删除列表中的数据：lrem k 3 9（表示从左往右删除3个值为9的数据，-3的话从右往左删，0为删除全部，返回执行了多少条数据）
ltrim k 0 9（保留索引范围内的数据，其他全部删除）
lpop k（从左边一个一个删除数据，返回被删除的数据）
rpop k（从右边一个一个删除数据，返回被删除的数据）
RPOPLPUSH source destination（从右边删数据，把删掉的数据放入新的集合中）
查看索引：lindex k 3（值为3的索引）

#SET类型：
添加数据：
sadd s1 val1 val2 val3 val4（自动去掉重复值）
查看数据：SMEMBERS s1
删除数据：srem s1 val2
返回s2中不存在部分：SDIFF s1 s2 
将上面返回的内容放入s3中：SDIFFSTORE s3 s1 s2
取并集：SUNION s1 s2
把e从一个集合移动到另一个集合：SMOVE s3 s4 e
查看长度：SCARD s3
查看是否存在指定值：SISMEMBER s4 e（返回0则不存在）

#ZSET类型（有序）
添加：
ZADD zs1 100 k1 200 k2 300 k3（值必须是个float类型）
取值：
ZSCORE zs1 k2
查看所有键：ZRANGE zs1 0 -1
查看所有键（倒序）：ZREVRANGE zs1 0 -1
查看键的索引：ZRANK zs1 k2
加法：ZINCRBY zs1 1 k1（k1的值+1，返回计算后的结果）
根据值的范围查看键：ZRANGEBYSCORE zs1 150 400
根据值的范围查看键并带上值显示：ZRANGEBYSCORE zs1 200 300 WITHSCORES
上面的结果带上分页显示：ZRANGEBYSCORE zs1 100 400 WITHSCORES limit 0 2（0索引即从哪开始，2一次显示几条）

#其他命令：
查看所有key：keys *
查看key存不存在：EXISTS key2
设置有效期：EXPIRE key2 100（秒）
设置有效期：PEXPIRE key2 10000（毫秒）
取消有效期：PERSIST key2
切换到别的库：select 1（切换到1号库，默认在0号库）
把key1移动到1号库里面：move key1 1
清库：FLUSHDB
清所有库：FLUSHALL

#事务
开始事务：MULTI
执行事务：EXEC
取消事务：DISCARD
注意：事务过程中每条命令是独立的，也就是说有些命令执行报错也不会回滚。
监听某个key的值是否发生变化，如果变化，在之后的事务提交会失败。
WATCH key

#持久化机制
两种方式：RDB和AOF。RDB每隔一段时间存储一次到磁盘中。AOF默认每秒去存储历史命令。
默认RDB。每段时间内存已快照方式写入二进制文件dump.rdb中。可配置。
在启动客户端时指定指令：
./redis-cli -h ip -p port save（立即存储，前台存储）
./redis-cli -h ip -p port bgsave（立即存储，后台存储）
修改配置变为AOF方式：appendonly yes（默认是no）

#主从复制
在从机配置文件中修改：
slaveof <masterip> <masterport>（默认是注释的）
masterauth <master-password>（如果主机没有设置密码可以不用动这里）

#搭建集群：
准备工作：
1.使用ruby脚本搭建集群，安装运行环境
yum install ruby
yum install rubygems
2.上传并安装ruby脚本运行使用的包。
gem install redis-3.0.0.gem

修改每台集群redis的配置文件：cluster-enabled yes前面的注释去掉。开启集群功能，此redis实例作为集群的一个节点。已经配置主从关系的实例不允许搭建集群。
启动每个redis实例。
必须先清除掉数据文件：
rm -f dump.rdb;rm -f modes.conf
删除后需重启，重启后会再次生成文件，再删除后执行下面步骤。
然后进入解压目录的src目录下：/usr/local/redis-3.2.12/src（也可以将redis-trib.rb文件拷贝到bin下执行）
执行如下脚本：
./redis-trib.rb create --replicas 1 192.168.0.201:6379 192.168.0.202:6379 192.168.0.203:6379 192.168.0.204:6379 192.168.0.205:6379 192.168.0.206:6379
搭建好之后客户端连接方式：./redis-cli -c（不加-c为单例连接模式）

